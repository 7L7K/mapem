_______________________
Version 2.0
_______________________
this is everything tTH we did to take it from 1.9 to v2


# 🗺️ MapEm — Genealogy Mapping & Migration Visualizer

> “Turn messy GEDCOM data into a clean, animated story of family migration.”

MapEm ingests GEDCOM files, normalizes the data, stores it in PostgreSQL, and gives you a slick React UI (Vite) to explore maps, timelines, and diff views of multiple tree versions.

---

## 1. Quick Start (Dev)

```bash
# 1. Clone + enter
git clone <your‑fork>
cd mapem

# 2. Spin everything up
./scripts/run_all.sh
# ↳ Starts Postgres (if not already), installs Python deps, fires Flask (port 5050), and launches Vite (port 5173)

# 3. Visit the UI
open http://localhost:5173
Heads‑up: Default DB creds live in backend/.flaskenv.
Change them or export your own env vars before running if you need something custom.
2. Project History & Re‑Org

2.0 → 2.1 “The Clean Up”
🔴 Old (pre‑2.1)	✅ New (2.1+)
Nested frontend/genealogy-frontend/ buried the real app.	Promoted to /frontend root—no more double React roots.
Duplicate .env, package.json, and stray build/ folder.	Single source of truth; dead artifacts deleted.
Python scripts hiding in React src/.	All helper scripts live in /scripts (or /scripts/dev for one‑offs).
Root littered with throwaway tools (dump_react_files_for_vite.py, etc.).	Archived or moved; root now shows only living code.
Backend files mixed flat (parser.py, main.py) next to folders.	Proper Flask layout under backend/app/ (models/, routes/, services/, utils/).
Docs scattered (Notes.txt).	Consolidated into this README + docs/ (future).
3. Folder Structure

mapem/
├── frontend/            # React 19 + Vite UI
│   ├── .env             # UI‑only vars
│   ├── src/
│   │   ├── context/     # React Context (TreeContext)
│   │   ├── services/    # API wrappers
│   │   ├── styles/      # Plain CSS modules
│   │   └── views/       # Feature folders (Map, Tree, People, Upload, ui/)
│   └── vite.config.js
├── backend/
│   ├── .flaskenv        # Flask & DB env
│   ├── main.py          # App factory
│   ├── config.py
│   ├── schema.sql       # (Generated by `scan_schema.py`)
│   └── app/
│       ├── models/
│       ├── routes/
│       ├── services/
│       └── utils/
├── scripts/
│   ├── run_all.sh       # Master dev launcher
│   ├── reset_db.py
│   ├── fix_imports.py
│   ├── check_dependencies.py
│   ├── env_check.sh
│   ├── list_files.sh
│   └── dev/             # One‑off helpers (cat_backend_files.py, etc.)
├── frontend-backup.zip  # v1 UI snapshot
└── mapem_v1.zip         # Pre‑cleanup archive
4. API Endpoints (Flask, port 5050)

Method	Route	Purpose
POST	/api/upload	Upload a GEDCOM file.
GET	/api/people/:id	Fetch an individual record.
GET	/api/map/:tree_id	GeoJSON of migration events.
GET	/api/timeline/:tree_id	Chronological life events.
GET	/api/diff?new_id=&existing_id=	Compare two tree versions.
GET	/api/schema	Introspect DB schema (dev helper).
(Full docs coming in /docs/api.md soon.)
5. Common Dev Commands

Task	Command
Lint frontend	npm run lint (inside frontend/)
Build frontend	npm run build
Run Flask only	python -m backend.main
Run unit tests (coming soon)	pytest
Re‑generate DB schema.sql	python backend/scan_schema.py > backend/schema.sql
Zip current project snapshot	python scripts/collect_code.sh
6. Roadmap

 Add Cypress end‑to‑end tests.
 OAuth login (Google + GitHub).
 Server‑side tree diff algorithm (move heavy compare off client).
 Automatic geocoding retry queue.
 Dark‑mode UI toggle (because, vibes).
7. Contributing

PRs welcome—just follow the lint rules and keep commit messages Imperative‑Present:
chore: bump React to 19.0.2
feat: add residence history endpoint
fix: null birth_date crash on timeline
8. License

MIT © 2025 King Algevon Eichelberger Jr.
✊🏾 Big shout‑out to everyone helping MapEm find the stories hidden in our family trees.

---

### Need anything tweaked?

* Want badges (CI, coverage, license) up top?  
* Prefer a diagram of the data flow?  
* Need deployment docs (Render, Fly, Heroku)?  

Just holler and we’ll tighten it up.