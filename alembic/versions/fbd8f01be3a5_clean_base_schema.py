"""clean base schema

Revision ID: fbd8f01be3a5
Revises: 
Create Date: 2025-06-15 18:37:55.171855

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fbd8f01be3a5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('raw_name', sa.String(), nullable=False),
    sa.Column('normalized_name', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('valid', 'vague_state', 'unresolved', 'historical', 'duplicate', 'manual_override', 'ok', 'failed', 'fixed', name='location_status_enum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('geocoded_at', sa.DateTime(), nullable=True),
    sa.Column('geocoded_by', sa.String(), nullable=True),
    sa.CheckConstraint('latitude BETWEEN -90 AND 90', name='chk_lat_range'),
    sa.CheckConstraint('longitude BETWEEN -180 AND 180', name='chk_lng_range'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('normalized_name'),
    sa.UniqueConstraint('normalized_name', name='uq_locations_normalized')
    )
    op.create_table('sources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('document_hash', sa.String(), nullable=False),
    sa.Column('text_content', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_hash', name='uq_sources_hash')
    )
    op.create_table('uploaded_trees',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tree_name', sa.String(), nullable=False),
    sa.Column('uploader_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alternate_names',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('alternate_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alternate_names_location_id'), 'alternate_names', ['location_id'], unique=False)
    op.create_table('location_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.Column('valid_from', sa.Integer(), nullable=True),
    sa.Column('valid_to', sa.Integer(), nullable=True),
    sa.Column('modern_equivalent', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('notes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tree_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('uploaded_tree_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('diff_summary', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['uploaded_tree_id'], ['uploaded_trees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uploaded_tree_id', 'version_number', name='uq_uploaded_tree_version')
    )
    op.create_index(op.f('ix_tree_versions_uploaded_tree_id'), 'tree_versions', ['uploaded_tree_id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tree_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('date_precision', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('source_tag', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('location_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tree_id'], ['tree_versions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_location_id'), 'events', ['location_id'], unique=False)
    op.create_index('ix_events_tree_date', 'events', ['tree_id', 'date'], unique=False)
    op.create_index(op.f('ix_events_tree_id'), 'events', ['tree_id'], unique=False)
    op.create_table('individuals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tree_id', sa.UUID(), nullable=False),
    sa.Column('gedcom_id', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', 'unknown', name='gender_enum'), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('death_date', sa.Date(), nullable=True),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tree_id'], ['tree_versions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('ix_individual_version_gedcom', 'individuals', ['tree_id', 'gedcom_id'], unique=False)
    op.create_index(op.f('ix_individuals_tree_id'), 'individuals', ['tree_id'], unique=False)
    op.create_table('event_participants',
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('event_id', 'individual_id')
    )
    op.create_table('event_sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'source_id', name='uq_event_source')
    )
    op.create_index(op.f('ix_event_sources_event_id'), 'event_sources', ['event_id'], unique=False)
    op.create_index(op.f('ix_event_sources_source_id'), 'event_sources', ['source_id'], unique=False)
    op.create_table('families',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tree_id', sa.UUID(), nullable=False),
    sa.Column('gedcom_id', sa.String(), nullable=True),
    sa.Column('husband_id', sa.UUID(), nullable=True),
    sa.Column('wife_id', sa.UUID(), nullable=True),
    sa.Column('family_type', sa.Enum('nuclear', 'extended', 'single', 'other', name='family_type_enum'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['husband_id'], ['individuals.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['tree_id'], ['tree_versions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wife_id'], ['individuals.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_families_tree_id'), 'families', ['tree_id'], unique=False)
    op.create_index('ix_families_version_gedcom', 'families', ['tree_id', 'gedcom_id'], unique=False)
    op.create_table('individual_sources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('individual_id', 'source_id', name='uq_individual_source')
    )
    op.create_index(op.f('ix_individual_sources_individual_id'), 'individual_sources', ['individual_id'], unique=False)
    op.create_index(op.f('ix_individual_sources_source_id'), 'individual_sources', ['source_id'], unique=False)
    op.create_table('residence_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.Column('location_id', sa.UUID(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('ix_res_history_indiv_dates', 'residence_history', ['individual_id', 'start_date', 'end_date'], unique=False)
    op.create_index(op.f('ix_residence_history_individual_id'), 'residence_history', ['individual_id'], unique=False)
    op.create_index(op.f('ix_residence_history_location_id'), 'residence_history', ['location_id'], unique=False)
    op.create_table('tree_persons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('uploaded_tree_id', sa.UUID(), nullable=False),
    sa.Column('tree_version_id', sa.UUID(), nullable=False),
    sa.Column('individual_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tree_version_id'], ['tree_versions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_tree_id'], ['uploaded_trees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tree_persons_individual_id'), 'tree_persons', ['individual_id'], unique=False)
    op.create_index(op.f('ix_tree_persons_tree_version_id'), 'tree_persons', ['tree_version_id'], unique=False)
    op.create_index(op.f('ix_tree_persons_uploaded_tree_id'), 'tree_persons', ['uploaded_tree_id'], unique=False)
    op.create_table('tree_relationships',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tree_id', sa.UUID(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.Column('related_person_id', sa.UUID(), nullable=False),
    sa.Column('relationship_type', sa.String(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['individuals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['related_person_id'], ['individuals.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tree_id'], ['uploaded_trees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tree_relationships_person_id'), 'tree_relationships', ['person_id'], unique=False)
    op.create_index(op.f('ix_tree_relationships_related_person_id'), 'tree_relationships', ['related_person_id'], unique=False)
    op.create_index(op.f('ix_tree_relationships_tree_id'), 'tree_relationships', ['tree_id'], unique=False)
    op.create_table('user_actions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('uploaded_tree_id', sa.UUID(), nullable=True),
    sa.Column('individual_id', sa.UUID(), nullable=True),
    sa.Column('event_id', sa.UUID(), nullable=True),
    sa.Column('action_type', sa.Enum('upload', 'edit', 'delete', 'merge', 'manual_fix', name='action_type_enum'), nullable=False),
    sa.Column('user_name', sa.String(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['individual_id'], ['individuals.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['uploaded_tree_id'], ['uploaded_trees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_actions_event', 'user_actions', ['event_id'], unique=False)
    op.create_index(op.f('ix_user_actions_event_id'), 'user_actions', ['event_id'], unique=False)
    op.create_index('ix_user_actions_individual', 'user_actions', ['individual_id'], unique=False)
    op.create_index(op.f('ix_user_actions_individual_id'), 'user_actions', ['individual_id'], unique=False)
    op.create_index('ix_user_actions_upload', 'user_actions', ['uploaded_tree_id'], unique=False)
    op.create_index(op.f('ix_user_actions_uploaded_tree_id'), 'user_actions', ['uploaded_tree_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_actions_uploaded_tree_id'), table_name='user_actions')
    op.drop_index('ix_user_actions_upload', table_name='user_actions')
    op.drop_index(op.f('ix_user_actions_individual_id'), table_name='user_actions')
    op.drop_index('ix_user_actions_individual', table_name='user_actions')
    op.drop_index(op.f('ix_user_actions_event_id'), table_name='user_actions')
    op.drop_index('ix_user_actions_event', table_name='user_actions')
    op.drop_table('user_actions')
    op.drop_index(op.f('ix_tree_relationships_tree_id'), table_name='tree_relationships')
    op.drop_index(op.f('ix_tree_relationships_related_person_id'), table_name='tree_relationships')
    op.drop_index(op.f('ix_tree_relationships_person_id'), table_name='tree_relationships')
    op.drop_table('tree_relationships')
    op.drop_index(op.f('ix_tree_persons_uploaded_tree_id'), table_name='tree_persons')
    op.drop_index(op.f('ix_tree_persons_tree_version_id'), table_name='tree_persons')
    op.drop_index(op.f('ix_tree_persons_individual_id'), table_name='tree_persons')
    op.drop_table('tree_persons')
    op.drop_index(op.f('ix_residence_history_location_id'), table_name='residence_history')
    op.drop_index(op.f('ix_residence_history_individual_id'), table_name='residence_history')
    op.drop_index('ix_res_history_indiv_dates', table_name='residence_history')
    op.drop_table('residence_history')
    op.drop_index(op.f('ix_individual_sources_source_id'), table_name='individual_sources')
    op.drop_index(op.f('ix_individual_sources_individual_id'), table_name='individual_sources')
    op.drop_table('individual_sources')
    op.drop_index('ix_families_version_gedcom', table_name='families')
    op.drop_index(op.f('ix_families_tree_id'), table_name='families')
    op.drop_table('families')
    op.drop_index(op.f('ix_event_sources_source_id'), table_name='event_sources')
    op.drop_index(op.f('ix_event_sources_event_id'), table_name='event_sources')
    op.drop_table('event_sources')
    op.drop_table('event_participants')
    op.drop_index(op.f('ix_individuals_tree_id'), table_name='individuals')
    op.drop_index('ix_individual_version_gedcom', table_name='individuals')
    op.drop_table('individuals')
    op.drop_index(op.f('ix_events_tree_id'), table_name='events')
    op.drop_index('ix_events_tree_date', table_name='events')
    op.drop_index(op.f('ix_events_location_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_tree_versions_uploaded_tree_id'), table_name='tree_versions')
    op.drop_table('tree_versions')
    op.drop_table('location_versions')
    op.drop_index(op.f('ix_alternate_names_location_id'), table_name='alternate_names')
    op.drop_table('alternate_names')
    op.drop_table('uploaded_trees')
    op.drop_table('sources')
    op.drop_table('locations')
    # ### end Alembic commands ###
