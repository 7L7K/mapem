// src/components/TreeSelector.jsx
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { useTree } from '../context/TreeContext';

const API_BASE_URL = import.meta.env.VITE_API_BASE_URL || 'http://localhost:5050';

const TreeSelector = () => {
  const { treeId, setTreeId } = useTree();
  const [trees, setTrees] = useState([]);
  const [selectedTree, setSelectedTree] = useState(null);
  const [loading, setLoading] = useState(true);

  // Fetch tree list
  useEffect(() => {
    console.log("📡 Fetching tree list...");
    axios.get(`${API_BASE_URL}/api/trees`)
      .then(res => {
        console.log("✅ Tree list loaded:", res.data);
        setTrees(res.data);
        setLoading(false);

        // Try to restore selected tree from localStorage
        const savedTreeId = localStorage.getItem("selectedTreeId");
        if (savedTreeId && res.data.some(t => t.id === Number(savedTreeId))) {
          setTreeId(Number(savedTreeId));
        }
      })
      .catch(err => {
        console.error("❌ Failed to fetch tree list:", err);
        setLoading(false);
      });
  }, []);

  // Update local state and save to localStorage
  useEffect(() => {
    if (treeId && trees.length) {
      localStorage.setItem("selectedTreeId", treeId);
      const match = trees.find(t => t.id === treeId);
      setSelectedTree(match || null);
    }
  }, [treeId, trees]);

  if (loading) return <div>Loading tree list...</div>;

  return (
    <div style={{ marginBottom: '1.5rem' }}>
      <label><strong>🌲 Select Tree:</strong></label>
      <select
        value={treeId || ""}
        onChange={(e) => {
          const newId = Number(e.target.value);
          console.log("🔄 Tree changed to:", newId);
          setTreeId(newId);
        }}
      >
        <option value="" disabled>Select a tree...</option>
        {trees.map(tree => (
          <option key={tree.id} value={tree.id}>
            {tree.name || `Tree ${tree.id}`}
          </option>
        ))}
      </select>

      {/* Tree metadata preview */}
      {selectedTree && (
        <div style={{ marginTop: '0.75rem', fontSize: '0.9rem' }}>
          <div><strong>ID:</strong> {selectedTree.id}</div>
          <div><strong>Name:</strong> {selectedTree.name}</div>
          <div><strong>Uploaded:</strong> {new Date(selectedTree.created_at).toLocaleString()}</div>
        </div>
      )}
    </div>
  );
};

export default TreeSelector;
